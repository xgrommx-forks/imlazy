[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/index.js",
    "memberof": null,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "const B = a => b => c => a(b(c))\nconst createIterable = generator => Object.freeze({[Symbol.iterator]: generator})\nconst generatorFromIterable = xs => function* () {yield* xs}\nconst iterableFromIterable = B(createIterable)(generatorFromIterable)\nconst isIterable = a => a[Symbol.iterator];\nconst curry = f => (...xs) => xs.length < f.length ? curry(f.bind(null, ...xs)) : f(...xs);\n\n/**\n * Returns a new iterable with the given function applied to the value at the given index\n * @param {Function} f\n * @param {Number} index\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * adjust(x => 10 * x,\n *        1,\n *        range(1, Infinity)) // => iterableOf(1, 20, 3, 4, 5, 6, 7, 8, ...)\n */\nexport const adjust = curry((f, a, xs) => createIterable(function* () {\n  let i = a\n  for (let x of xs) if (i--) yield x; else yield f(x)\n}))\n\n/**\n * Returns a new iterable of the given iterable followed by the given value\n * @param {Any} value\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * append(4,\n *        [1, 2, 3]) // => iterableOf(1, 2, 3, 4)\n */\nexport const append = curry((a, xs) => createIterable(function* () {\n  yield* xs\n  yield a\n}))\n\n/**\n * Returns a new iterable with the given value at the given index\n * @param {Number} index\n * @param {Any} value\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * assoc(2,\n *       42,\n *       range(1, Infinity)) // => iterableOf(1, 2, 42, 4, 5, 6, 7, 8, ...)\n */\nexport const assoc = curry((a, b, xs) => createIterable(function* () {\n  let i = a\n  for (let x of xs) if (i--) yield x; else yield b\n}))\n\n/**\n * Returns a new iterable of the first given iterable followed by the second given iterable\n * @param {Iterable} xs\n * @param {Iterable} ys\n * @return {Iterable}\n * @example\n * concat([100, 200],\n *        range(1, Infinity)) // => iterableOf(100, 200, 1, 2, 3, 4, 5, 6, 7, 8, ...)\n */\nexport const concat = curry((xs, ys) => createIterable(function* () {\n  yield* xs\n  yield* ys\n}))\n\n/**\n * Returns a new iterable of the given iterable without the first n elements\n * @param {Number} n\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * drop(2,\n *      range(1, Infinity)) // => iterableOf(3, 4, 5, 6, 7, 8, 9, 10, ...)\n */\nexport const drop = curry((n, xs) => createIterable(function* () {\n  let i = n\n  for (let x of xs) if (i-- <= 0) yield x\n}))\n\n/**\n * Returns a new iterable by applying the given function to each value in the given iterable only yielding values when false is returned\n * @param {Function} f\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * dropWhile(x => x <= 2,\n *           [1, 2, 3, 4, 3, 2, 1]) // => iterableOf(3, 4, 3, 2, 1)\n */\nexport const dropWhile = curry((f, xs) => createIterable(function* () {\n  let yielding = false\n  for (let x of xs) {\n    if (!f(x)) yielding = true\n    if (yielding) yield x\n  }\n}))\n\n/**\n * Applies the given function to each value in the given iterable until that function returns falsy, in which case false is returned. If the iterable is completely traversed and falsy is never returned by the given function then true is returned\n * @param {Function} f\n * @param {Iterable} xs\n * @return {Boolean}\n * @example\n * every(x => x <= 20,\n *       [1, 2, 3, 4]) // => true\n * every(x => x <= 2,\n *       [1, 2, 3, 4]) // => false\n */\nexport const every = curry((f, xs) => {\n  for (let x of xs) if (!f(x)) return false\n  return true\n})\n\n/**\n * Returns a new iterable containing only values from the given iterable where the given function applied to that value returns truthy\n * @param {Function} f\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * filter(x => x % 2 === 0,\n *        range(1, Infinity)) // => iterableOf(2, 4, 6, 8, 12, 14, 16, 18, ...)\n */\nexport const filter = curry((f, xs) => createIterable(function* () {\n  for (let x of xs) if (f(x)) yield x\n}))\n\n/**\n * Applies the given function to each value in the given iterable. If truthy is returned then find returns the value from the iterable and if the end of the iterable is reached with truthy never returned then find returns undefined\n * @param {Function} f\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * find(x => x % 2 === 0,\n *      range(1, Infinity)) // => 2\n * find(x => x === 0,\n *      [1, 2, 3, 4, 5, 6]) // => undefined\n */\nexport const find = curry((f, xs) => {\n  for (let x of xs) if (f(x)) return x\n})\n\n/**\n * Applies the given function to each value in the given iterable. If truthy is returned then findIndex returns the index from the iterable and if the end of the iterable is reached with truthy never returned then findIndex returns undefined\n * @param {Function} f\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * findIndex(x => x % 2 === 0,\n *           range(1, Infinity) // => 1\n * findIndex(x => x === 0,\n *           [1, 2, 3]) // => undefined\n */\nexport const findIndex = curry((f, xs) => {\n  let i = 0\n  for (let x of xs) if (f(x)) return i; else i++\n})\n\n/**\n * Takes an iterable and recursively unnests any values which are iterables\n * @param {Iterable} xs\n * @return {Iterable}\n * @example flatten([1, [2, [3, [[4]]]], [range(1, Infinity)]) // => iterableOf(1, 2, 4, 4, 1, 2, 3, 4, 5, 6, 7, 8, ...)\n */\nexport const flatten = xs => createIterable(function* recur (ys = xs) {\n  for (let y of ys) if (isIterable(y)) yield* recur(y); else yield y\n})\n\n/**\n * Returns the first value from an iterable\n * @param {Iterable} xs\n * @return {Any}\n * @example head(range(1, Infinity)) // => 1\n */\nexport const head = ([x]) => x\n\n/**\n * Returns a new iterable with the given value inserted at the given index in the given iterable\n * @param {Number} index\n * @param {Any} value\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * insert(1,\n *        42,\n *        range(1, Infinity)) // => iterableOf(1, 42, 2, 3, 4, 5, 6, 7, 8, ...)\n */\nexport const insert = curry((a, b, xs) => createIterable(function* () {\n  let i = a\n  for (let x of xs) if (i--) yield x; else {\n    yield b\n    yield x\n  }\n}))\n\n/**\n * Returns a new iterable with the values in the first given iterable inserted at the given index in the last given iterable\n * @param {Number} index\n * @param {Iterable} xs\n * @param {Iterable} ys\n * @return {Iterable}\n * @example\n * insertAll(1,\n *           [42, 24, 3],\n *           [1, 2, 3]) // => iterableOf(1, 42, 24, 3, 2, 3)\n */\nexport const insertAll = curry((a, xs, ys) => createIterable(function* () {\n  let i = a\n  for (let y of ys) if (i--) yield y; else {\n    yield* xs\n    yield y\n  }\n}))\n\n/**\n * Returns a new iterable with the given value interspersed at every other index in the given iterable\n * @param {Any} value\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * intersperse(42,\n *             range(1, Infinity)) // => iterableOf(1, 42, 2, 42, 3, 42, 4, 42, ...)\n */\nexport const intersperse = curry((a, xs) => createIterable(function* () {\n  for (let x of xs) {\n    yield x\n    yield a\n  }\n}))\n\n/**\n * Returns a new iterable with values identical to the given iterable\n * @param {Iterable} xs\n * @return {Iterable}\n * @example interableFrom([1, 2, 3]) // => iterableOf(1, 2, 3)\n */\nexport const iterableFrom = iterableFromIterable\n\n/**\n * Returns an iterable of the arguments passed\n * @param {Any} ...values\n * @return {Iterable}\n * @example [...interableOf(1, 2, 3)] // => [1, 2, 3]\n */\nexport const iterableOf = (...xs) => iterableFromIterable(xs)\n\n/**\n * Returns an infinite iterable with the first value as the given initial value and all other values defined by applying the given function to the previous value\n * @param {f} function\n * @param {Any} initialValue\n * @return {Iterable}\n * @example\n * iterate(x => 2 * x,\n *         1) // => iterableOf(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, ...)\n */\nexport const iterate = curry((f, a) => createIterable(function* () {\n  let x = a\n  yield x\n  while (true) yield x = f(x)\n}))\n\n/**\n * Returns the last value in the given iterable\n * @param {Iterable} xs\n * @return {Any}\n * @example last([1, 2, 3]) // => 3\n */\nexport const last = xs => [...xs].pop()\n\n/**\n * Returns the number of elements in the given iterable\n * @param {Iterable} xs\n * @return {Number}\n * @example length(range(1, 100)) // => 100\n */\nexport const length = xs => [...xs].length\n\n/**\n * Returns a new iterable by infinitely repeating the given iterable\n * @param {Iterable} xs\n * @return {Iterable}\n * @example makeCircular([1, 2, 3]) // => iterableOf(1, 2, 3, 1, 2, 3, 1, 2, 3, ...)\n */\nexport const makeCircular = xs => createIterable(function* () {\n  while (true) yield* xs\n})\n\n/**\n * Returns a new Iterable by applying the given function to every value in the given iterable\n * @param {f} function\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * map(x => 2 * x,\n *     range(1, Infinity)) // => iterableOf(2, 4, 6, 8, 10, 12, 14, 16, 18, ...)\n */\nexport const map = curry((f, xs) => createIterable(function* () {\n  for (let x of xs) yield f(x)\n}))\n\n/**\n * Returns the value at the given index in the given iterable, or undefined if no value exists\n * @param {Number} n\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * nth(90,\n *     range(1, Infinity)) // => 90\n */\nexport const nth = curry((a, xs) => {\n  let i = a\n  for (let x of xs) if (i-- <= 0) return x\n})\n\n/**\n * Returns an iterable of two iterables, the first iterable contains every value from the given iterable where the given function returns truthy and teh second iterable contains every value from the given iterable where the given function returns falsy\n * @param {Number} n\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * partition(x => x % 2 === 0,\n *           [1, 2, 3, 4]) // => iterableOf(iterableOf(2, 4), iterableOf(1, 3))\n*/\nexport const partition = curry((f, xs) => createIterable(function* () {\n  const listA = []\n  const listB = []\n  for (let x of xs) {\n    if (f(x)) listA.push(x); else listB.push(x)\n  }\n  yield iterableFromIterable(listA)\n  yield iterableFromIterable(listB)\n}))\n\n/**\n * Returns a new iterable with the given value prepended to the given iterable\n * @param {Any} value\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * prepend(42,\n *         range(1, Infinity)) // => iterableOf(42, 1, 2, 3, 4, 5, 6, 7, 8, ...)\n */\nexport const prepend = curry((a, xs) => createIterable(function* () {\n  yield a\n  yield* xs\n}))\n\n/**\n * Returns a new iterable starting with the first given value and either descending or ascending in integer steps until the yielded value is equal to the second given value\n * @param {Number} startFrom\n * @param {Number} endAt\n * @return {Iterable}\n * @example\n * range(1, 3)) // => iterableOf(1, 2, 3)\n * range(1, Infinity)) // => iterableOf(1, 2, 3, 4, 5, 6, 7, 8, ...)\n * range(-1, -Infinity)) // => iterableOf(-1, -2, -3, -4, -5, -6, -7, -8, ...)\n */\nexport const range = curry((a, b) => createIterable(function* () {\n  let n = a\n  if (n < b) while (n <= b) yield n++; else while (n >= b) yield n--\n}))\n\n/**\n * Returns a value by applying the given function with the accumulated value (starting with the given initialValue) and the current value for every value in the given iterable. The value returned from each call to the given function becomes the accumulated value for the next time it is called\n * @param {f} function\n * @param {Any} initialValue\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * reduce((acc, val) => acc + val,\n *        0,\n *        [1, 2, 3, 4]) // => 10\n */\nexport const reduce = curry((f, a, xs) => {\n  let acc = a\n  for (let x of xs) acc = f(acc, x)\n  return acc\n})\n\n/**\n * Returns an iterable of the given iterable, excluding values from the given index for the given count\n * @param {Number} index\n * @param {Number} count\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * remove(2,\n *        4,\n *        range(1, Infinity)) // => iterableOf(1, 2, 7, 8, 9, 10, 11, 12, ...)\n */\nexport const remove = curry((a, b, xs) => createIterable(function* () {\n  let i = a\n  let j = b\n  let yielding = true\n  for (let x of xs) {\n    if (!i--) yielding = false\n    if (yielding) yield x; else if (!--j) yielding = true\n  }\n}))\n\n/**\n * Returns a new iterable where every value is the given value and there are as many values as the given count\n * @param {Number} value\n * @param {Number} count\n * @return {Iterable}\n * @example\n * const repeat42 = repeat(42)\n * repeat42(3)) // => iterableOf(42, 42, 42)\n * repeat42(Infinity)) // => iterableOf(42, 42, 42, 42, 42, 42, 42, 42, 42...)\n */\nexport const repeat = curry((a, b) => createIterable(function* () {\n  let x = b\n  while (x--) yield a\n}))\n\n/**\n * Returns a new iterable which is the reverse of the given iterable\n * @param {Iterable} xs\n * @return {Iterable}\n * @example reverse([1, 2, 3]) // => iterableOf(3, 2, 1)\n */\nexport const reverse = xs => iterableFromIterable([...xs].reverse())\n\n/**\n * Returns an iterable of the given iterable starting at the given startIndex and ending one before the given endIndex\n * @param {Number} startIndex\n * @param {Number} endIndex\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * slice(2,\n *       4,\n *       range(1, Infinity)) // => iterableOf(3, 4)\n */\nexport const slice = curry((a, b, xs) => createIterable(function* () {\n  let i = a\n  let j = b\n  for (let x of xs) {\n    if (--j < 0) return\n    if (--i < 0) yield x\n  }\n}))\n\n/**\n * Applies the given function to each value in the given iterable until that function returns truthy, in which case true is returned. If the iterable is completely traversed and truthy is never returned by the given function then false is returned\n * @param {Function} f\n * @param {Iterable} xs\n * @return {Boolean}\n * @example\n * some(x => x === 20,\n *      [1, 2, 3, 4]) // => false\n * some(x => x === 2,\n *      [1, 2, 3, 4]) // => true\n */\nexport const some = curry((f, xs) => {\n  for (let x of xs) if (f(x)) return true\n  return false\n})\n\n/**\n * Returns a new iterable of the given iterable sorted based on the return value of the given function when called with any two values from the given iterable\n * @param {f} function\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * sort((a, b) => a - b,\n *      [5, 7, 3, 2]) // => iterableOf(2, 3, 5, 7)\n */\nexport const sort = curry((f, xs) => iterableFromIterable([...xs].sort(f)))\n\n/**\n * Returns a new iterable comprised by iterables created from the given iterable of length specified by the given length\n * @param {Number} length\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * const splitEveryThree = splitEvery(3)\n * splitEveryThree([1, 2, 3, 4]) // => iterableOf(iterableOf(1, 2, 3), iterableOf(4))\n * splitEveryThree(range(1, Infinity)) // => iterableOf(iterableOf(1, 2, 3), iterableOf(4, 5, 6), iterableOf(7, 8, 9), ...)\n */\nexport const splitEvery = curry((a, xs) => createIterable(function* () {\n  let i = 0\n  while (true) {\n    const yieldVal = slice(i * a)((i + 1) * a)(xs)\n    if (length(yieldVal)) yield yieldVal; else return\n    i++\n  }\n}))\n\n/**\n * Returns a new iterable of all but the first element of the given iterable\n * @param {Iterable} xs\n * @return {Iterable}\n * @example tail(range(1, Infinity)) // => iterableOf(2, 3, 4, 5, 6, 7, 8, 9, ...)\n */\nexport const tail = xs => createIterable(function* () {\n  let i = 1\n  for (let x of xs) if (i) i--; else yield x\n})\n\n/**\n * Returns an iterable of the first n elements of the given iterable\n * @param {Number} n\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * take(3,\n *      range(1, Infinity)) // => iterableOf(1, 2, 3)\n */\nexport const take = curry((a, xs) => createIterable(function* () {\n  let i = a\n  for (let x of xs) if (!i--) return; else yield x\n}))\n\n/**\n * Returns an iterable of the all elements of the given iterable until the given function returns falsy when called on the value of that element\n * @param {Function} f\n * @param {Iterable} xs\n * @return {Iterable}\n * @example\n * takeWhile(x => x < 5,\n *           range(1, Infinity)) // => iterableOf(1, 2, 3, 4)\n */\nexport const takeWhile = curry((f, xs) => createIterable(function* () {\n  for (let x of xs) if (f(x)) yield x; else return\n}))\n\n/**\n * Returns a new iterable which is a transposition of the given iterable (columns and rows swapped)\n * @param {Iterable} xs\n * @return {Iterable}\n * @example transpose([[1, 2, 3],\n *                     [4, 5, 6],\n *                     [7, 8, 9]]) // => iterableOf(iterableOf(1, 4, 7),\n *                                 //               iterableOf(2, 5, 8),\n *                                 //               iterableOf(3, 6, 9))\n */\nexport const transpose = xss => createIterable(function* () {\n  const done = () => null\n  const _nth = (a, xs) => {\n    for (let x of xs) if (a-- <= 0) return x\n    return done\n  }\n  for (let i = 0; ; i++) {\n    const returnGenerator = function* () {\n      let j = 0\n      for (let xs of xss) {\n        const value = _nth(i, xs)\n        if (value !== done) yield value\n      }\n    }\n    if (returnGenerator().next().done) return\n    yield createIterable(returnGenerator)\n  }\n})\n\n/**\n * Returns a new iterable with values as iterables of length 2 with the first element as the corresponding element from the first given iterable and the second element as the corresponding element from the second given iterable. The length of the returned iterable is the same as the shortest iterable supplied\n * @param {Iterable} xs\n * @param {Iterable} ys\n * @return {Iterable}\n * @example\n * zip([2, 3, 5, 7],\n *     range(1, Infinity)) // => iterableOf(iterableOf(2, 1),\n *                         //               iterableOf(3, 2),\n *                         //               iterableOf(5, 3),\n *                         //               iterableOf(7, 4))\n */\nexport const zip = curry((xs, ys) => {\n  const iteratorB = ys[Symbol.iterator]()\n  return createIterable(function* () {\n    for (let x of xs) {\n      let {done, value} = iteratorB.next()\n      if (done) return; else yield iterableFromIterable([x, value])\n    }\n  })\n})\n\n/**\n * Returns a new iterable with values as the result of calling the given function with the corresponding element from the first and second given iterables respectively. The length of the returned iterable is the same as the shortest iterable supplied\n * @param {Function} f\n * @param {Iterable} xs\n * @param {Iterable} ys\n * @return {Iterable}\n * @example\n * zipWith((a, b) => a + b\n *         [2, 3, 5, 7],\n *         range(1, Infinity)) // => iterableOf(3, 5, 8, 11)\n */\nexport const zipWith = curry((f, xs, ys) => {\n  const iteratorB = ys[Symbol.iterator]()\n  return createIterable(function* () {\n    for (let x of xs) {\n      let {done, value} = iteratorB.next()\n      if (done) return; else yield f(x, value)\n    }\n  })\n})\n"
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "B",
    "memberof": "src/index.js",
    "longname": "src/index.js~B",
    "access": null,
    "export": false,
    "importPath": "imlazy",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "createIterable",
    "memberof": "src/index.js",
    "longname": "src/index.js~createIterable",
    "access": null,
    "export": false,
    "importPath": "imlazy",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "generatorFromIterable",
    "memberof": "src/index.js",
    "longname": "src/index.js~generatorFromIterable",
    "access": null,
    "export": false,
    "importPath": "imlazy",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "iterableFromIterable",
    "memberof": "src/index.js",
    "longname": "src/index.js~iterableFromIterable",
    "access": null,
    "export": false,
    "importPath": "imlazy",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isIterable",
    "memberof": "src/index.js",
    "longname": "src/index.js~isIterable",
    "access": null,
    "export": false,
    "importPath": "imlazy",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "curry",
    "memberof": "src/index.js",
    "longname": "src/index.js~curry",
    "access": null,
    "export": false,
    "importPath": "imlazy",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "adjust",
    "memberof": "src/index.js",
    "longname": "src/index.js~adjust",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{adjust}",
    "description": "Returns a new iterable with the given function applied to the value at the given index",
    "examples": [
      "adjust(x => 10 * x,\n       1,\n       range(1, Infinity)) // => iterableOf(1, 20, 3, 4, 5, 6, 7, 8, ...)"
    ],
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "append",
    "memberof": "src/index.js",
    "longname": "src/index.js~append",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{append}",
    "description": "Returns a new iterable of the given iterable followed by the given value",
    "examples": [
      "append(4,\n       [1, 2, 3]) // => iterableOf(1, 2, 3, 4)"
    ],
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assoc",
    "memberof": "src/index.js",
    "longname": "src/index.js~assoc",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{assoc}",
    "description": "Returns a new iterable with the given value at the given index",
    "examples": [
      "assoc(2,\n      42,\n      range(1, Infinity)) // => iterableOf(1, 2, 42, 4, 5, 6, 7, 8, ...)"
    ],
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 10,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "concat",
    "memberof": "src/index.js",
    "longname": "src/index.js~concat",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{concat}",
    "description": "Returns a new iterable of the first given iterable followed by the second given iterable",
    "examples": [
      "concat([100, 200],\n       range(1, Infinity)) // => iterableOf(100, 200, 1, 2, 3, 4, 5, 6, 7, 8, ...)"
    ],
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "ys",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "drop",
    "memberof": "src/index.js",
    "longname": "src/index.js~drop",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{drop}",
    "description": "Returns a new iterable of the given iterable without the first n elements",
    "examples": [
      "drop(2,\n     range(1, Infinity)) // => iterableOf(3, 4, 5, 6, 7, 8, 9, 10, ...)"
    ],
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "dropWhile",
    "memberof": "src/index.js",
    "longname": "src/index.js~dropWhile",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{dropWhile}",
    "description": "Returns a new iterable by applying the given function to each value in the given iterable only yielding values when false is returned",
    "examples": [
      "dropWhile(x => x <= 2,\n          [1, 2, 3, 4, 3, 2, 1]) // => iterableOf(3, 4, 3, 2, 1)"
    ],
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 13,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "every",
    "memberof": "src/index.js",
    "longname": "src/index.js~every",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{every}",
    "description": "Applies the given function to each value in the given iterable until that function returns falsy, in which case false is returned. If the iterable is completely traversed and falsy is never returned by the given function then true is returned",
    "examples": [
      "every(x => x <= 20,\n      [1, 2, 3, 4]) // => true\nevery(x => x <= 2,\n      [1, 2, 3, 4]) // => false"
    ],
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 14,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "filter",
    "memberof": "src/index.js",
    "longname": "src/index.js~filter",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{filter}",
    "description": "Returns a new iterable containing only values from the given iterable where the given function applied to that value returns truthy",
    "examples": [
      "filter(x => x % 2 === 0,\n       range(1, Infinity)) // => iterableOf(2, 4, 6, 8, 12, 14, 16, 18, ...)"
    ],
    "lineNumber": 124,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "find",
    "memberof": "src/index.js",
    "longname": "src/index.js~find",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{find}",
    "description": "Applies the given function to each value in the given iterable. If truthy is returned then find returns the value from the iterable and if the end of the iterable is reached with truthy never returned then find returns undefined",
    "examples": [
      "find(x => x % 2 === 0,\n     range(1, Infinity)) // => 2\nfind(x => x === 0,\n     [1, 2, 3, 4, 5, 6]) // => undefined"
    ],
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 16,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "findIndex",
    "memberof": "src/index.js",
    "longname": "src/index.js~findIndex",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{findIndex}",
    "description": "Applies the given function to each value in the given iterable. If truthy is returned then findIndex returns the index from the iterable and if the end of the iterable is reached with truthy never returned then findIndex returns undefined",
    "examples": [
      "findIndex(x => x % 2 === 0,\n          range(1, Infinity) // => 1\nfindIndex(x => x === 0,\n          [1, 2, 3]) // => undefined"
    ],
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 17,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "flatten",
    "memberof": "src/index.js",
    "longname": "src/index.js~flatten",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{flatten}",
    "description": "Takes an iterable and recursively unnests any values which are iterables",
    "examples": [
      "flatten([1, [2, [3, [[4]]]], [range(1, Infinity)]) // => iterableOf(1, 2, 4, 4, 1, 2, 3, 4, 5, 6, 7, 8, ...)"
    ],
    "lineNumber": 165,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "head",
    "memberof": "src/index.js",
    "longname": "src/index.js~head",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{head}",
    "description": "Returns the first value from an iterable",
    "examples": [
      "head(range(1, Infinity)) // => 1"
    ],
    "lineNumber": 175,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Any"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "insert",
    "memberof": "src/index.js",
    "longname": "src/index.js~insert",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{insert}",
    "description": "Returns a new iterable with the given value inserted at the given index in the given iterable",
    "examples": [
      "insert(1,\n       42,\n       range(1, Infinity)) // => iterableOf(1, 42, 2, 3, 4, 5, 6, 7, 8, ...)"
    ],
    "lineNumber": 188,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 20,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "insertAll",
    "memberof": "src/index.js",
    "longname": "src/index.js~insertAll",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{insertAll}",
    "description": "Returns a new iterable with the values in the first given iterable inserted at the given index in the last given iterable",
    "examples": [
      "insertAll(1,\n          [42, 24, 3],\n          [1, 2, 3]) // => iterableOf(1, 42, 24, 3, 2, 3)"
    ],
    "lineNumber": 207,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "ys",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "intersperse",
    "memberof": "src/index.js",
    "longname": "src/index.js~intersperse",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{intersperse}",
    "description": "Returns a new iterable with the given value interspersed at every other index in the given iterable",
    "examples": [
      "intersperse(42,\n            range(1, Infinity)) // => iterableOf(1, 42, 2, 42, 3, 42, 4, 42, ...)"
    ],
    "lineNumber": 224,
    "params": [
      {
        "nullable": null,
        "types": [
          "Any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "iterableFrom",
    "memberof": "src/index.js",
    "longname": "src/index.js~iterableFrom",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{iterableFrom}",
    "description": "Returns a new iterable with values identical to the given iterable",
    "examples": [
      "interableFrom([1, 2, 3]) // => iterableOf(1, 2, 3)"
    ],
    "lineNumber": 237,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 23,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "iterableOf",
    "memberof": "src/index.js",
    "longname": "src/index.js~iterableOf",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{iterableOf}",
    "description": "Returns an iterable of the arguments passed",
    "examples": [
      "[...interableOf(1, 2, 3)] // => [1, 2, 3]"
    ],
    "lineNumber": 245,
    "params": [
      {
        "nullable": null,
        "types": [
          "Any"
        ],
        "spread": false,
        "optional": false,
        "name": "...values",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "iterate",
    "memberof": "src/index.js",
    "longname": "src/index.js~iterate",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{iterate}",
    "description": "Returns an infinite iterable with the first value as the given initial value and all other values defined by applying the given function to the previous value",
    "examples": [
      "iterate(x => 2 * x,\n        1) // => iterableOf(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, ...)"
    ],
    "lineNumber": 256,
    "params": [
      {
        "nullable": null,
        "types": [
          "f"
        ],
        "spread": false,
        "optional": false,
        "name": "function",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Any"
        ],
        "spread": false,
        "optional": false,
        "name": "initialValue",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 25,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "last",
    "memberof": "src/index.js",
    "longname": "src/index.js~last",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{last}",
    "description": "Returns the last value in the given iterable",
    "examples": [
      "last([1, 2, 3]) // => 3"
    ],
    "lineNumber": 268,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Any"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 26,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "length",
    "memberof": "src/index.js",
    "longname": "src/index.js~length",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{length}",
    "description": "Returns the number of elements in the given iterable",
    "examples": [
      "length(range(1, 100)) // => 100"
    ],
    "lineNumber": 276,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 27,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "makeCircular",
    "memberof": "src/index.js",
    "longname": "src/index.js~makeCircular",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{makeCircular}",
    "description": "Returns a new iterable by infinitely repeating the given iterable",
    "examples": [
      "makeCircular([1, 2, 3]) // => iterableOf(1, 2, 3, 1, 2, 3, 1, 2, 3, ...)"
    ],
    "lineNumber": 284,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 28,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "map",
    "memberof": "src/index.js",
    "longname": "src/index.js~map",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{map}",
    "description": "Returns a new Iterable by applying the given function to every value in the given iterable",
    "examples": [
      "map(x => 2 * x,\n    range(1, Infinity)) // => iterableOf(2, 4, 6, 8, 10, 12, 14, 16, 18, ...)"
    ],
    "lineNumber": 297,
    "params": [
      {
        "nullable": null,
        "types": [
          "f"
        ],
        "spread": false,
        "optional": false,
        "name": "function",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "nth",
    "memberof": "src/index.js",
    "longname": "src/index.js~nth",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{nth}",
    "description": "Returns the value at the given index in the given iterable, or undefined if no value exists",
    "examples": [
      "nth(90,\n    range(1, Infinity)) // => 90"
    ],
    "lineNumber": 310,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 30,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "partition",
    "memberof": "src/index.js",
    "longname": "src/index.js~partition",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{partition}",
    "description": "Returns an iterable of two iterables, the first iterable contains every value from the given iterable where the given function returns truthy and teh second iterable contains every value from the given iterable where the given function returns falsy",
    "examples": [
      "partition(x => x % 2 === 0,\n          [1, 2, 3, 4]) // => iterableOf(iterableOf(2, 4), iterableOf(1, 3))"
    ],
    "lineNumber": 324,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 31,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "prepend",
    "memberof": "src/index.js",
    "longname": "src/index.js~prepend",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{prepend}",
    "description": "Returns a new iterable with the given value prepended to the given iterable",
    "examples": [
      "prepend(42,\n        range(1, Infinity)) // => iterableOf(42, 1, 2, 3, 4, 5, 6, 7, 8, ...)"
    ],
    "lineNumber": 343,
    "params": [
      {
        "nullable": null,
        "types": [
          "Any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "range",
    "memberof": "src/index.js",
    "longname": "src/index.js~range",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{range}",
    "description": "Returns a new iterable starting with the first given value and either descending or ascending in integer steps until the yielded value is equal to the second given value",
    "examples": [
      "range(1, 3)) // => iterableOf(1, 2, 3)\nrange(1, Infinity)) // => iterableOf(1, 2, 3, 4, 5, 6, 7, 8, ...)\nrange(-1, -Infinity)) // => iterableOf(-1, -2, -3, -4, -5, -6, -7, -8, ...)"
    ],
    "lineNumber": 358,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "startFrom",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "endAt",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "reduce",
    "memberof": "src/index.js",
    "longname": "src/index.js~reduce",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{reduce}",
    "description": "Returns a value by applying the given function with the accumulated value (starting with the given initialValue) and the current value for every value in the given iterable. The value returned from each call to the given function becomes the accumulated value for the next time it is called",
    "examples": [
      "reduce((acc, val) => acc + val,\n       0,\n       [1, 2, 3, 4]) // => 10"
    ],
    "lineNumber": 374,
    "params": [
      {
        "nullable": null,
        "types": [
          "f"
        ],
        "spread": false,
        "optional": false,
        "name": "function",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Any"
        ],
        "spread": false,
        "optional": false,
        "name": "initialValue",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "remove",
    "memberof": "src/index.js",
    "longname": "src/index.js~remove",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{remove}",
    "description": "Returns an iterable of the given iterable, excluding values from the given index for the given count",
    "examples": [
      "remove(2,\n       4,\n       range(1, Infinity)) // => iterableOf(1, 2, 7, 8, 9, 10, 11, 12, ...)"
    ],
    "lineNumber": 391,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "count",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "repeat",
    "memberof": "src/index.js",
    "longname": "src/index.js~repeat",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{repeat}",
    "description": "Returns a new iterable where every value is the given value and there are as many values as the given count",
    "examples": [
      "const repeat42 = repeat(42)\nrepeat42(3)) // => iterableOf(42, 42, 42)\nrepeat42(Infinity)) // => iterableOf(42, 42, 42, 42, 42, 42, 42, 42, 42...)"
    ],
    "lineNumber": 411,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "count",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 36,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "reverse",
    "memberof": "src/index.js",
    "longname": "src/index.js~reverse",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{reverse}",
    "description": "Returns a new iterable which is the reverse of the given iterable",
    "examples": [
      "reverse([1, 2, 3]) // => iterableOf(3, 2, 1)"
    ],
    "lineNumber": 422,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "slice",
    "memberof": "src/index.js",
    "longname": "src/index.js~slice",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{slice}",
    "description": "Returns an iterable of the given iterable starting at the given startIndex and ending one before the given endIndex",
    "examples": [
      "slice(2,\n      4,\n      range(1, Infinity)) // => iterableOf(3, 4)"
    ],
    "lineNumber": 435,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "startIndex",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "endIndex",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 38,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "some",
    "memberof": "src/index.js",
    "longname": "src/index.js~some",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{some}",
    "description": "Applies the given function to each value in the given iterable until that function returns truthy, in which case true is returned. If the iterable is completely traversed and truthy is never returned by the given function then false is returned",
    "examples": [
      "some(x => x === 20,\n     [1, 2, 3, 4]) // => false\nsome(x => x === 2,\n     [1, 2, 3, 4]) // => true"
    ],
    "lineNumber": 455,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 39,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "sort",
    "memberof": "src/index.js",
    "longname": "src/index.js~sort",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{sort}",
    "description": "Returns a new iterable of the given iterable sorted based on the return value of the given function when called with any two values from the given iterable",
    "examples": [
      "sort((a, b) => a - b,\n     [5, 7, 3, 2]) // => iterableOf(2, 3, 5, 7)"
    ],
    "lineNumber": 469,
    "params": [
      {
        "nullable": null,
        "types": [
          "f"
        ],
        "spread": false,
        "optional": false,
        "name": "function",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "splitEvery",
    "memberof": "src/index.js",
    "longname": "src/index.js~splitEvery",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{splitEvery}",
    "description": "Returns a new iterable comprised by iterables created from the given iterable of length specified by the given length",
    "examples": [
      "const splitEveryThree = splitEvery(3)\nsplitEveryThree([1, 2, 3, 4]) // => iterableOf(iterableOf(1, 2, 3), iterableOf(4))\nsplitEveryThree(range(1, Infinity)) // => iterableOf(iterableOf(1, 2, 3), iterableOf(4, 5, 6), iterableOf(7, 8, 9), ...)"
    ],
    "lineNumber": 481,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 41,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "tail",
    "memberof": "src/index.js",
    "longname": "src/index.js~tail",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{tail}",
    "description": "Returns a new iterable of all but the first element of the given iterable",
    "examples": [
      "tail(range(1, Infinity)) // => iterableOf(2, 3, 4, 5, 6, 7, 8, 9, ...)"
    ],
    "lineNumber": 496,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 42,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "take",
    "memberof": "src/index.js",
    "longname": "src/index.js~take",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{take}",
    "description": "Returns an iterable of the first n elements of the given iterable",
    "examples": [
      "take(3,\n     range(1, Infinity)) // => iterableOf(1, 2, 3)"
    ],
    "lineNumber": 510,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "takeWhile",
    "memberof": "src/index.js",
    "longname": "src/index.js~takeWhile",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{takeWhile}",
    "description": "Returns an iterable of the all elements of the given iterable until the given function returns falsy when called on the value of that element",
    "examples": [
      "takeWhile(x => x < 5,\n          range(1, Infinity)) // => iterableOf(1, 2, 3, 4)"
    ],
    "lineNumber": 524,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "transpose",
    "memberof": "src/index.js",
    "longname": "src/index.js~transpose",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{transpose}",
    "description": "Returns a new iterable which is a transposition of the given iterable (columns and rows swapped)",
    "examples": [
      "transpose([[1, 2, 3],\n                    [4, 5, 6],\n                    [7, 8, 9]]) // => iterableOf(iterableOf(1, 4, 7),\n                                //               iterableOf(2, 5, 8),\n                                //               iterableOf(3, 6, 9))"
    ],
    "lineNumber": 538,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 45,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "zip",
    "memberof": "src/index.js",
    "longname": "src/index.js~zip",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{zip}",
    "description": "Returns a new iterable with values as iterables of length 2 with the first element as the corresponding element from the first given iterable and the second element as the corresponding element from the second given iterable. The length of the returned iterable is the same as the shortest iterable supplied",
    "examples": [
      "zip([2, 3, 5, 7],\n    range(1, Infinity)) // => iterableOf(iterableOf(2, 1),\n                        //               iterableOf(3, 2),\n                        //               iterableOf(5, 3),\n                        //               iterableOf(7, 4))"
    ],
    "lineNumber": 569,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "ys",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "zipWith",
    "memberof": "src/index.js",
    "longname": "src/index.js~zipWith",
    "access": null,
    "export": true,
    "importPath": "imlazy",
    "importStyle": "{zipWith}",
    "description": "Returns a new iterable with values as the result of calling the given function with the corresponding element from the first and second given iterables respectively. The length of the returned iterable is the same as the shortest iterable supplied",
    "examples": [
      "zipWith((a, b) => a + b\n        [2, 3, 5, 7],\n        range(1, Infinity)) // => iterableOf(3, 5, 8, 11)"
    ],
    "lineNumber": 590,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "xs",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "ys",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 49,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 59,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 60,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 61,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 62,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 63,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 64,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 65,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 66,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 67,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 68,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 69,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 70,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 71,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 72,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 73,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 74,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 75,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 76,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 77,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 78,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 79,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 80,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 81,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 82,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 83,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 84,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 85,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 86,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 87,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 88,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 89,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 90,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 91,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 92,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 96,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": null,
    "builtinExternal": true
  }
]